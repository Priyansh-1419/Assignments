
1. Create servlet that displays the number of visits by a user using the session tracking. 
Also, display the session id and other details of the session object.
2. The Customer logins with his/her credentials, maintain the login and logout for the 

customer. Demonstrate the effect of session timeout in the application. 
3. Write a servlet application to implement the feature of “keep me sign in” while login. 
a. If user signs in with “Keep me signed in” option, a cookie is created on the User’s 
browser. From this cookie web application can identify the user and let him use 
the system.
b. Whenever user comes back to the site, if he is authenticated using cookie a new 
cookie is created and stored in his machine, so that cookie expiration time is also 
moved out.
4. Create a servlet that displays all the cookies in a tabular form, if they exist. Otherwise, 
display the message “No Cookie”
5. In case the cookies are disabled in Client’s browser, recreate the Question-3 with the 
help of URL encoding. 
6. Create a Loan Application to perform the below:
a. Apply for Loan. Fields which need to be available are mentioned as below: 
(a) Applicant Name 
(b) Applicant email id 
(c) Contact Number 
(d) Loan Type (Drop-Down) 
(e) Loan Tenure 
(f) Reason for Loan 
(g) Salary Details 
(i) Organization Name 
(ii) Designation 
(iii) Monthly Salary 
Store the record in the database. After storing the record, return the 
LoanApplicationNumber to the applicant, which must be auto-generated in the 
application.















1. Create servlet that displays the number of visits by a user using the session tracking. 
Also, display the session id and other details of the session object.

To create a servlet that displays the number of visits by a user using session tracking, we can follow these steps:

Create a new Java class and extend it with HttpServlet.
Override the doGet method to handle HTTP GET requests.
Get the HttpSession object using the getSession method of the HttpServletRequest object.
Get the value of the visitCount attribute from the session object. If the attribute does not exist, set its value to 1.
Increment the value of the visitCount attribute.
Set the visitCount attribute back to the session object.
Get the session ID using the getId method of the HttpSession object.
Write the response to the client, including the session ID, visit count, and any other details of the session object that you want to display.
Here's an example implementation of the servlet:


import javax.servlet.*;
import javax.servlet.http.*;
import java.io.*;

public class VisitCounterServlet extends HttpServlet {

    public void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        // Get the session object
        HttpSession session = request.getSession();

        // Get the visit count from the session object
        Integer visitCount = (Integer) session.getAttribute("visitCount");
        if (visitCount == null) {
            visitCount = 1;
        } else {
            visitCount++;
        }

        // Set the visit count back to the session object
        session.setAttribute("visitCount", visitCount);

        // Get the session ID
        String sessionId = session.getId();

        // Write the response to the client
        response.setContentType("text/html");
        PrintWriter out = response.getWriter();
        out.println("<html><head><title>Visit Counter Servlet</title></head>");
        out.println("<body>");
        out.println("<h1>Visit Counter Servlet</h1>");
        out.println("<p>You have visited this page " + visitCount + " times.</p>");
        out.println("<p>Your session ID is " + sessionId + ".</p>");
        out.println("<p>Other details of the session object:</p>");
        out.println("<ul>");
        out.println("<li>Creation Time: " + session.getCreationTime() + "</li>");
        out.println("<li>Last Accessed Time: " + session.getLastAccessedTime() + "</li>");
        out.println("<li>Max Inactive Interval: " + session.getMaxInactiveInterval() + " seconds</li>");
        out.println("</ul>");
        out.println("</body></html>");
    }
}




In this example, we're storing the visitCount attribute in the session object and incrementing it each time the user visits the page. We're also displaying the session ID and some other details of the session object, such as its creation time, last accessed time, 
and maximum inactive interval.



import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;

public class VisitCounterServlet extends HttpServlet {

  protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

    // Get the current session object, or create one if it doesn't exist
    HttpSession session = request.getSession(true);

    // Get the current visit count from the session, or initialize it to 1 if it doesn't exist
    Integer visitCount = (Integer)session.getAttribute("visitCount");
    if (visitCount == null) {
      visitCount = new Integer(1);
    } else {
      visitCount = new Integer(visitCount.intValue() + 1);
    }

    // Set the updated visit count in the session
    session.setAttribute("visitCount", visitCount);

    // Set the content type of the response
    response.setContentType("text/html");

    // Get the writer to output the response
    PrintWriter out = response.getWriter();

    // Output the visit count
    out.println("<html><head><title>Visit Counter Servlet</title></head>");
    out.println("<body>");
    out.println("<h1>Visit Counter Servlet</h1>");
    out.println("<p>You have visited this page " + visitCount.intValue() + " times.</p>");

    // Output the session ID and other session details
    out.println("<h2>Session Details:</h2>");
    out.println("<p>Session ID: " + session.getId() + "</p>");
    out.println("<p>Creation Time: " + new java.util.Date(session.getCreationTime()) + "</p>");
    out.println("<p>Last Accessed Time: " + new java.util.Date(session.getLastAccessedTime()) + "</p>");
    out.println("<p>Max Inactive Interval (seconds): " + session.getMaxInactiveInterval() + "</p>");

    out.println("</body></html>");
  }

}






import java.io.*;

import javax.servlet.*;

import javax.servlet.http.*;

public class CustomerLoginServlet extends HttpServlet {

  // A hardcoded username and password for demo purposes

  private static final String USERNAME = "customer";

  private static final String PASSWORD = "password";

  protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

    // Get the username and password parameters from the request

    String username = request.getParameter("username");

    String password = request.getParameter("password");

    // Check if the credentials are correct

    if (username != null && username.equals(USERNAME) && password != null && password.equals(PASSWORD)) {

      // If the credentials are correct, create a new session for the customer

      HttpSession session = request.getSession(true);

      session.setAttribute("username", username);

      // Set the session timeout to 60 seconds for demo purposes

      session.setMaxInactiveInterval(60);

      // Redirect to the home page

      response.sendRedirect("home.jsp");

    } else {

      // If the credentials are incorrect, display an error message

      request.setAttribute("errorMessage", "Invalid username or password");

      request.getRequestDispatcher("login.jsp").forward(request, response);

    }

  }

  protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

    // Get the current session object

    HttpSession session = request.getSession(false);

    // Check if the session exists and has a username attribute

    if (session != null && session.getAttribute("username") != null) {

      // If the session exists and has a username attribute, the customer is already logged in

      // Display a message and provide a logout link

      String username = (String)session.getAttribute("username");

      response.setContentType("text/html");

      PrintWriter out = response.getWriter();

      out.println("<html><head><title>Customer Home Page</title></head>");

      out.println("<body>");

      out.println("<h1>Welcome, " + username + "!</h1>");

      out.println("<p>You are already logged in.</p>");

      out.println("<p><a href=\"logout\">Logout</a></p>");

      out.println("</body></html>");

    } else {

      // If the session doesn't exist or doesn't have a username attribute, the customer is not logged in

      // Display the login page

      request.getRequestDispatcher("login.jsp").forward(request, response);

    }

  }

}




import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;

public class LoginServlet extends HttpServlet {

  // A hardcoded username and password for demo purposes
  private static final String USERNAME = "user";
  private static final String PASSWORD = "password";

  protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

    // Get the username and password parameters from the request
    String username = request.getParameter("username");
    String password = request.getParameter("password");

    // Check if the credentials are correct
    if (username != null && username.equals(USERNAME) && password != null && password.equals(PASSWORD)) {

      // If the credentials are correct, create a new session for the user
      HttpSession session = request.getSession(true);
      session.setAttribute("username", username);

      // Check if the "keep me signed in" checkbox is checked
      boolean keepSignedIn = "on".equals(request.getParameter("keepSignedIn"));

      // If "keep me signed in" is checked, create a cookie with the username and set its maximum age to 30 days
      if (keepSignedIn) {
        Cookie cookie = new Cookie("username", username);
        cookie.setMaxAge(30 * 24 * 60 * 60); // 30 days in seconds
        response.addCookie(cookie);
      }

      // Redirect to the home page
      response.sendRedirect("home.jsp");

    } else {

      // If the credentials are incorrect, display an error message
      request.setAttribute("errorMessage", "Invalid username or password");
      request.getRequestDispatcher("login.jsp").forward(request, response);

    }

  }

  protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

    // Get the current session object
    HttpSession session = request.getSession(false);

    // Check if the session exists and has a username attribute
    if (session != null && session.getAttribute("username") != null) {

      // If the session exists and has a username attribute, the user is already logged in
      // Display a message and provide a logout link

      String username = (String)session.getAttribute("username");

      response.setContentType("text/html");
      PrintWriter out = response.getWriter();
      out.println("<html><head><title>Home Page</title></head>");
      out.println("<body>");
      out.println("<h1>Welcome, " + username + "!</h1>");
      out.println("<p>You are already logged in.</p>");
      out.println("<p><a href=\"logout\">Logout</a></p>");
      out.println("</body></html>");

    } else {

      // If the session doesn't exist or doesn't have a username attribute, check if the user has a cookie with the username
      Cookie[] cookies = request.getCookies();
      String username = null;

      if (cookies != null) {
        for (Cookie cookie : cookies) {
          if ("username".equals(cookie.getName())) {
            username = cookie.getValue();
            break;
          }
        }
      }

      // If the user has a cookie with the username, create a new session for the user and redirect to the home page
      if (username != null) {
        HttpSession newSession = request.getSession(true);
        newSession.setAttribute("username", username);
        response.sendRedirect("home.jsp");
      } else {
        // If the user doesn't have a cookie with the username, display the login page
        request.getRequestDispatcher("login.jsp").forward(request, response);
      }

    }

  }

}






import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;

public class LoginServlet extends HttpServlet {

  // A hardcoded username and password for demo purposes
  private static final String USERNAME = "user";
  private static final String PASSWORD = "password";

  protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

    // Get the username and password parameters from the request
    String username = request.getParameter("username");
    String password = request.getParameter("password");

    // Check if the credentials are correct
    if (username != null && username.equals(USERNAME) && password != null && password.equals(PASSWORD)) {

      // If the credentials are correct, create a new session for the user
      HttpSession session = request.getSession(true);
      session.setAttribute("username", username);

      // Check if the "keep me signed in" checkbox is checked
      boolean keepSignedIn = "on".equals(request.getParameter("keepSignedIn"));

      if (keepSignedIn) {

        // If "keep me signed in" is checked and cookies are disabled, encode the username in the URL
        String encodedUsername = response.encodeURL(username);

        // Add the encoded username as a parameter to the login URL
        String loginUrl = "login?username=" + encodedUsername;

        // Redirect to the login URL
        response.sendRedirect(loginUrl);

      } else {

        // If "keep me signed in" is not checked, redirect to the home page
        response.sendRedirect("home.jsp");

      }

    } else {

      // If the credentials are incorrect, display an error message
      request.setAttribute("errorMessage", "Invalid username or password");
      request.getRequestDispatcher("login.jsp").forward(request, response);

    }

  }

  protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

    // Get the current session object
    HttpSession session = request.getSession(false);

    // Check if the session exists and has a username attribute
    if (session != null && session.getAttribute("username") != null) {

      // If the session exists and has a username attribute, the user is already logged in
      // Display a message and provide a logout link

      String username = (String)session.getAttribute("username");

      response.setContentType("text/html");
      PrintWriter out = response.getWriter();
      out.println("<html><head><title>Home Page</title></head>");
      out.println("<body>");
      out.println("<h1>Welcome, " + username + "!</h1>");
      out.println("<p>You are already logged in.</p>");
      out.println("<p><a href=\"logout\">Logout</a></p>");
      out.println("</body></html>");

    } else {

      // If the session doesn't exist or doesn't have a username attribute, check if the user has a username parameter in the URL
      String username = request.getParameter("username");

      if (username != null) {

        // If the user has a username parameter in the URL, create a new session for the user and redirect to the home page
        HttpSession newSession = request.getSession(true);
        newSession.setAttribute("username", username);
        response.sendRedirect("home.jsp");

      } else {

        // If the user doesn't have a username parameter in the URL, display the login page
        request.getRequestDispatcher("login.jsp").forward(request, response);

      }

    }

  }

}






