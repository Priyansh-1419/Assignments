
1. Do the following with only JSPs (and no servlets) and using JSP scripting elements:
a. Create a method that take two int numbers and return their sum as int.
b. Invoke the method from within template text using JSP elements (example 
o/p - Sum of 3 and 4 is 7.)
c. Print above line to console as well using JSP elements.
Deploy the project into tomcat, restart server and compare the source jsp with the 
generated servlet.
2. Write a program in JSP that prints the current date and time using JSP expressions. 
3. Write a program in JSP that prints n numbers and their factorials in a tabular form. 
Also, get the value of n from the user using the GET method.
4. Write a JSP that takes the user’s name and age from a form. 
a. Echo back the name and age along with a message stating the price of movie 
tickets. 
b. The price is determined by the age passed to the JSP. 
c. If the age is greater than 62, the movie ticket price is $7.00. 
d. If the user is less than 10 years old, the price is $5.00. 
e. For everyone else, the price is $9.50.
5. Create an HTML form that takes a number from the user. Also, create a servlet that 
forwards the control to a JSP page according to the user input. When user enters 1 it 
should display AboutUs.jsp. When user enters 2, ContactUs.jsp should display. 
Otherwise, error.jsp should display.



JSP – Day 2
6. Create a form to accept product details and store in a Collection. If the product is 
already inserted, display the appropriate message to insert another product. If the 
product is inserted, show all the products available in the JSP page using:
a. Scriptlets
b. Java Bean
c. Expression Language
d. JSTL tags
➔ Document the difference between all 4 mechanisms.
7. The Loan Application created on Servlet – Day 3, implement MVC architecture in the 
same and add the below mentioned functionalities.
a. Implement Validations as mentioned below:
Field Validation
Applicant Name Required field with only alphabets
Applicant email id Required field with email Validation
Loan Tenure Required field and value must not be negative or 0.
Organization Name Contains only alphabets
NSBT


Designation Contains only alphabets
Monthly Salary value must not be negative or 0.
If the validations are not correct, the control is redirected to Error Page.
b. Provide a functionality to check Loan Status by entering the 
LoanApplicationNumber. The application will check the loan status for the 
given LoanApplicationNumber and return the corresponding status as either 
‘Approved’, ‘Rejected’ or ‘Pending’. 
c. In the above application, if the LoanApplicationNumber entered doesn’t 
exist, it throws a ApplicationNumberIncorrectException. The exception is 
handled by the Mapped ErrorServlet. 




<%@ page language="java" %>

<%
   int sum(int num1, int num2) {
      return num1 + num2;
   }
%>

<html>
<head>
<title>Sum of Two Integers</title>
</head>
<body>

<%
   int num1 = 10;
   int num2 = 20;
   int result = sum(num1, num2);
%>

<p> The sum of <%= num1 %> and <%= num2 %> is <%= result %> </p>

</body>
</html>





<%@ page language="java" %>

<%

   int sum(int num1, int num2) {

      return num1 + num2;

   }

%>

<html>

<head>

<title>Invoke Method from Template Text</title>

</head>

<body>

Sum of 3 and 4 is <%= sum(3,4) %>

</body>

</html>





<%@ page language="java" %>

<%
   int sum(int num1, int num2) {
      return num1 + num2;
   }
%>

<html>
<head>
<title>Print to Console using JSP Elements</title>
</head>
<body>

<%
   int num1 = 3;
   int num2 = 4;
   int result = sum(num1,num2);
   System.out.println("Sum of " + num1 + " and " + num2 + " is " + result);
%>

Sum of <%= num1 %> and <%= num2 %> is <%= result %>

</body>
</html>



<%@ page language="java" %>

<%
   int sum(int num1, int num2) {
      return num1 + num2;
   }
%>

<html>
<head>
<title>Print to Console using JSP Elements</title>
</head>
<body>

<%
   int num1 = 3;
   int num2 = 4;
   int result = sum(num1,num2);
   System.out.println("Sum of " + num1 + " and " + num2 + " is " + result);
%>

Sum of <%= num1 %> and <%= num2 %> is <%= result %>

</body>
</html>



Sure, here are the steps to deploy the JSP project into Tomcat and compare the source JSP with the generated servlet:

Create a new JSP file with the code from the previous examples, and save it as sum.jsp in the Tomcat webapps directory.

Start Tomcat server and access the JSP page by visiting http://localhost:8080/sum.jsp.

After the JSP page is accessed, Tomcat will generate a servlet from the JSP page and store it in the work directory of Tomcat.

To find the generated servlet, navigate to the Tomcat work directory (usually located in the work folder of the Tomcat installation directory).

In the work directory, find the generated

servlet corresponding to the sum.jsp page. The servlet should have a name like org.apache.jsp.sum_jsp.

Compare the source code of the sum.jsp file with the generated servlet to see how Tomcat has translated the JSP code into a servlet. You should see that the JSP scriptlet code has been converted into Java code, and that the JSP expression language has been translated into Java print statements.

You can make changes to the JSP file and redeploy it by restarting the Tomcat server. Tomcat will regenerate the servlet from the updated JSP file when the page is accessed again.





<%@ page language="java" %>
<html>
<head>
<title>Print Current Date and Time using JSP Expressions</title>
</head>
<body>

The current date and time is <%= new java.util.Date() %>

</body>
</html>





<%@ page language="java" %>
<html>
<head>
<title>Print Factorials of n Numbers in a Tabular Form using JSP</title>
</head>
<body>

<%
   int n = 5; // Change this value to set the number of rows in the table
   
   // Define a method to calculate the factorial of a given number
   long factorial(int num) {
      long result = 1;
      for (int i = 2; i <= num; i++) {
         result *= i;
      }
      return result;
   }
%>

<table border="1">
<tr>
<th>Number</th>
<th>





<%@ page language="java" %>
<html>
<head>
<title>Movie Ticket Prices</title>
</head>
<body>

<h2>Enter Your Information</h2>
<form method="post" action="movie.jsp">
<p>Name: <input type="text" name="name"></p>
<p>Age: <input type="text" name="age"></p>
<input type="submit" value="Submit">
</form>

<%
   String name = request.getParameter("name");
   int age = Integer.parseInt(request.getParameter("age"));

   double ticketPrice;
   String message;

   if (age > 62) {
      ticketPrice = 7.00;
      message = "Senior discount applied!";
   } else if (age < 10) {
      ticketPrice = 5.00;
      message = "Child discount applied!";
   } else {
      ticketPrice = 9.50;
      message = "No discount applied.";
   }

   // Echo back the user's name, age, and the price of the movie ticket
   out.println("<p>Hello " + name + ", your age is " + age + ".</p>");
   out.println("<p>" + message + " The price of the movie ticket is $" + ticketPrice + ".</p>");
%>

</body>
</html>





<!DOCTYPE html>
<html>
<head>
	<title>Movie Ticket Price Calculator</title>
</head>
<body>
	<h1>Enter Your Details</h1>
	<form action="movie.jsp" method="POST">
		Name: <input type="text" name="name"><br><br>
		Age: <input type="number" name="age"><br><br>
		<input type="submit" value="Submit">
	</form>
</body>
</html>


<!DOCTYPE html>
<html>
<head>
	<title>Movie Ticket Price Calculator</title>
</head>
<body>
	<h1>Movie Ticket Price Calculator</h1>
	<%
		String name = request.getParameter("name");
		int age = Integer.parseInt(request.getParameter("age"));
		double ticketPrice = 0.0;
		
		if(age > 62) {
			ticketPrice = 7.00;
		} else if(age < 10) {
			ticketPrice = 5.00;
		} else {
			ticketPrice = 9.50;
		}
	%>
	<p>Dear <%= name %>, your age is <%= age %>.</p>
	<p>The ticket price for you is $<%= ticketPrice %> USD.</p>
</body>
</html>








<!DOCTYPE html>
<html>
<head>
	<title>Page Selector</title>
</head>
<body>
	<h1>Select a Page</h1>
	<form method="post" action="PageSelectorServlet">
		<label for="page">Enter a page number (1 for About Us, 2 for Contact Us):</label>
		<input type="text" id="page" name="page">
		<input type="submit" value="Submit">
	</form>
</body>
</html>


import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class PageSelectorServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		int page = Integer.parseInt(request.getParameter("page"));
		
		switch(page) {
			case 1:
				request.getRequestDispatcher("AboutUs.jsp").forward(request, response);
				break;
			case 2:
				request.getRequestDispatcher("ContactUs.jsp").forward(request, response);
				break;
			default:
				request.getRequestDispatcher("error.jsp").forward(request, response);
		}
	}
}






<!-- AboutUs.jsp -->
<!DOCTYPE html>
<html>
<head>
	<title>About Us</title>
</head>
<body>
	<h1>About Us</h1>
	<p>We are a company that does amazing things.</p>
</body>
</html>










<!-- error.jsp -->

<!DOCTYPE html>

<html>

<head>

	<title>Error</title></head>

<body>

	<h1>Error</h1>

	<p>Invalid page number entered.</p>

</body>

</html>










JSP 2



<%@ page import="java.util.*" %>
<%@ page import="com.example.Product" %>

<%
    List<Product> products = (List<Product>) request.getAttribute("products");

    if (products == null) {
        products = new ArrayList<Product>();
        request.setAttribute("products", products);
    }

    String name = request.getParameter("name");
    String description = request.getParameter("description");
    double price = Double.parseDouble(request.getParameter("price"));

    boolean productExists = false;

    for (Product p : products) {
        if (p.getName().equals(name)) {
            productExists = true;
            break;
        }
    }

    if (productExists) {
%>
        <p>Product already exists. Please insert another product.</p>
<%
    } else {
        Product product = new Product(name, description, price);
        products.add(product);
    }
%>

<form method="post">
    <label for="name">Name:</label>
    <input type="text" id="name" name="name" required><br>

    <label for="description">Description:</label>
    <textarea id="description" name="description" required></textarea><br>

    <label for="price">Price:</label>
    <input type="number" id="price" name="price" step="0.01" min="0" required><br>

    <button type="submit">Insert</button>
</form>




<jsp:useBean id="productList" class="com.example.ProductList" scope="request" />

<c:forEach items="${productList.products}" var="p">
    <p>Name: ${p.name}</p>
    <p>Description: ${p.description}</p>
    <p>Price: ${p.price}</p>
</c:forEach>










<%@ page import="java.util.*" %>
<%@ page import="com.example.Product" %>

<%
    List<Product> products = (List<Product>) request.getAttribute("products");

    if (products == null) {
        products = new ArrayList<Product>();
        request.setAttribute("products", products);
    }

    String name = request.getParameter("name");
    String description = request.getParameter("description");
    double price = Double.parseDouble(request.getParameter("price"));

    boolean productExists = false;

    for (Product p : products) {
        if (p.getName().equals(name)) {
            productExists = true;
            break;
        }
    }

    if (productExists) {
%>
        <p>Product already exists. Please insert another product.</p>
<%
    } else {
        Product product = new Product(name, description, price);
        products.add(product);
    }
%>

<form method="post">
    <label for="name">Name:</label>
    <input type="text" id="name" name="name" required><br>

    <label for="description">Description:</label>
    <textarea id="description" name="description" required></textarea><br>

    <label for="price">Price:</label>
    <input type="number" id="price" name="price" step="0.01" min="0" required><br>

    <button type="submit">Insert</button>
</form>


scriplet

<%
    List<Product> products = (List<Product>) request.getAttribute("products");

    for (Product p : products) {
%>
        <p>Name: <%= p.getName() %></p>
        <p>Description: <%= p.getDescription() %></p>
        <p>Price: <%= p.getPrice() %></p>
<%
    }
%>




javabean

package com.example;

import java.util.List;

public class ProductList {
    private List<Product> products;

    public List<Product> getProducts() {
        return products;
    }

    public void setProducts(List<Product> products) {
        this.products = products;
    }
}




jsp page

<jsp:useBean id="productList" class="com.example.ProductList" scope="request" />

<c:forEach items="${productList.products}" var="p">
    <p>Name: ${p.name}</p>
    <p>Description: ${p.description}</p>
    <p>Price: ${p.price}</p>
</c:forEach>





